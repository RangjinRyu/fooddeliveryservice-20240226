Please implement for this Event Storming Model:

{"_type":"BoundedContext","aggregates":[{"aggregateRoot":{"_type":"AggregateRoot","fieldDescriptors":[{"className":"String","name":"orderId","displayName":"주문 ID","_type":"FieldDescriptor"},{"className":"String","name":"riderId","displayName":"라이더 ID","_type":"FieldDescriptor"},{"className":"String","name":"status","displayName":"상태","_type":"FieldDescriptor"},{"className":"statusType","name":"statusType","displayName":"상태 유형","_type":"FieldDescriptor"}]},"commands":[{"_type":"Command","fieldDescriptors":[{"className":"String","name":"orderId","_type":"FieldDescriptor"},{"className":"String","name":"restaurantId","_type":"FieldDescriptor"},{"className":"String","name":"riderId","_type":"FieldDescriptor"}],"name":"RequestDelivery","displayName":"배송 요청하기"},{"_type":"Command","fieldDescriptors":[{"className":"String","name":"orderId","_type":"FieldDescriptor"},{"className":"String","name":"riderId","_type":"FieldDescriptor"},{"className":"String","name":"status","_type":"FieldDescriptor"}],"name":"UpdateDeliveryStatus","displayName":"배송 상태 업데이트하기"}],"events":[{"fieldDescriptors":[{"className":"String","name":"orderId","_type":"FieldDescriptor"},{"className":"String","name":"restaurantId","_type":"FieldDescriptor"},{"className":"String","name":"riderId","_type":"FieldDescriptor"}],"name":"DeliveryRequested","displayName":"배송 요청됨","_type":"Event"},{"fieldDescriptors":[{"className":"String","name":"orderId","_type":"FieldDescriptor"},{"className":"String","name":"riderId","_type":"FieldDescriptor"},{"className":"String","name":"status","_type":"FieldDescriptor"}],"name":"RiderArrived","displayName":"라이더 도착함","_type":"Event"},{"fieldDescriptors":[{"className":"String","name":"orderId","_type":"FieldDescriptor"},{"className":"String","name":"riderId","_type":"FieldDescriptor"},{"className":"String","name":"status","_type":"FieldDescriptor"}],"name":"FoodDelivered","displayName":"음식 전달됨","_type":"Event"}],"name":"Delivery","displayName":"배송","_type":"Aggregate"}],"name":"delivery-management","displayName":"배송 관리","policies":[{"fieldDescriptors":[],"name":"RiderArrivalPolicy","displayName":"라이더 도착 정책","_type":"Policy"},{"fieldDescriptors":[],"name":"FoodDeliveryPolicy","displayName":"음식 배달 정책","_type":"Policy"}]}


I want to utilize following techniques:

- clean architecture
- spring-boot3
- spring-data-rest
- JPA (must use package jakarta.persistence.* instead of javax.persistence.*)
- H2 DB
- Lombok
- Kafka with spring-cloud-streams library 
- JUnit Test


SELF-CRITICISM: 
 - when you create pom.xml, USE correct parent project to spring boot 3
 - when you create pom.xml, you MUST specify the version: 3.1.3 ONLY for the spring-cloud-streams
 - Please generate start from pom.xml


when you create execution shell (run.sh), please add '--no-transfer-progress' option not to output transfer progress if there's mvn command:

```
mvn [command] --no-transfer-progress
```

